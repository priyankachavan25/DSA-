#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    struct Node* next;
} Node;

Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void append(Node** head, int data) {
    Node* newNode = createNode(data);

    if (*head == NULL) {
        *head = newNode;
        return;
    }

    Node* curr = *head;
    while (curr->next != NULL) {
        curr = curr->next;
    }

    curr->next = newNode;
}

void printReverse(Node* head) {
    if (head == NULL) {
        return;
    }

    printReverse(head->next);
    printf("%d ", head->data);
}

void freeList(Node* head) {
    if (head == NULL) {
        return;
    }

    freeList(head->next);
    free(head);
}

int main() {
    Node* head = NULL;

    // Append elements to the linked list
    append(&head, 1);
    append(&head, 2);
    append(&head, 3);
    append(&head, 4);
    append(&head, 5);

    // Print elements in reverse order
    printf("Linked List in Reverse Order: ");
    printReverse(head);
    printf("\n");

    // Free the allocated memory
    freeList(head);

    return 0;
}


